{"remainingRequest":"/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/src/App.vue","mtime":1561650871645},{"path":"/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { attrs: { id: \"app\" } }, [\n    _c(\"link\", {\n      attrs: {\n        rel: \"stylesheet\",\n        href: \"../node_modules/@fortawesome/fontawesome-free/css/all.css\"\n      }\n    }),\n    _c(\n      \"div\",\n      { staticClass: \"header\" },\n      [_c(\"center\", [_vm._v(\"TO-DO LIST\")])],\n      1\n    ),\n    _c(\"div\", { staticClass: \"row\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"col-md-4 to-do-list\" },\n        [\n          _c(\n            \"div\",\n            _vm._l(_vm.list, function(item, index) {\n              return _c(\n                \"div\",\n                { key: item.id, attrs: { item: item, index: index } },\n                [\n                  !item.tick\n                    ? _c(\"ToDoList\", {\n                        staticStyle: { cursor: \"pointer\" },\n                        attrs: { todo: item }\n                      })\n                    : _vm._e()\n                ],\n                1\n              )\n            }),\n            0\n          ),\n          _c(\n            \"div\",\n            _vm._l(_vm.list, function(item, index) {\n              return _c(\n                \"div\",\n                { key: item.id, attrs: { item: item, index: index } },\n                [\n                  item.tick\n                    ? _c(\"ToDoList\", {\n                        staticStyle: { cursor: \"pointer\" },\n                        attrs: { todo: item }\n                      })\n                    : _vm._e()\n                ],\n                1\n              )\n            }),\n            0\n          ),\n          _c(\n            \"center\",\n            [\n              _c(\n                \"b-button\",\n                {\n                  directives: [\n                    {\n                      name: \"b-modal\",\n                      rawName: \"v-b-modal.modal\",\n                      modifiers: { modal: true }\n                    }\n                  ],\n                  attrs: { pill: \"\", variant: \"outline-primary\" }\n                },\n                [_vm._v(\"Add new\")]\n              )\n            ],\n            1\n          ),\n          _c(\n            \"b-modal\",\n            {\n              ref: \"modal\",\n              attrs: { id: \"modal\", title: _vm.modalTitle },\n              on: { show: _vm.resetModal, hidden: _vm.reset, ok: _vm.handleOk }\n            },\n            [\n              _c(\n                \"form\",\n                {\n                  on: {\n                    submit: function($event) {\n                      $event.stopPropagation()\n                      $event.preventDefault()\n                      return _vm.handleSubmit($event)\n                    }\n                  }\n                },\n                [\n                  _c(\n                    \"b-form-group\",\n                    {\n                      ref: \"titleForm\",\n                      attrs: {\n                        state: _vm.titleState,\n                        \"label-cols-md\": \"2\",\n                        label: \"Tilte\",\n                        \"label-for\": \"title\",\n                        \"invalid-feedback\": \"Title is required\"\n                      }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"title\",\n                          state: _vm.titleState,\n                          required: \"\"\n                        },\n                        model: {\n                          value: _vm.title,\n                          callback: function($$v) {\n                            _vm.title = $$v\n                          },\n                          expression: \"title\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    {\n                      ref: \"bodyForm\",\n                      attrs: {\n                        state: _vm.bodyState,\n                        \"label-cols-md\": \"2\",\n                        label: \"Body\",\n                        \"label-for\": \"body\",\n                        \"invalid-feedback\": \"Body is required\"\n                      }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"body\",\n                          state: _vm.bodyState,\n                          required: \"\"\n                        },\n                        model: {\n                          value: _vm.body,\n                          callback: function($$v) {\n                            _vm.body = $$v\n                          },\n                          expression: \"body\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    {\n                      ref: \"startDateForm\",\n                      attrs: {\n                        state: _vm.startDateState,\n                        \"label-cols-md\": \"2\",\n                        label: \"Start: \",\n                        \"label-for\": \"startDate\",\n                        \"invalid-feedback\": \"Start date is invalid\"\n                      }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"startDate\",\n                          value: _vm.startDate,\n                          state: _vm.startDateState,\n                          required: \"\",\n                          type: \"date\"\n                        },\n                        model: {\n                          value: _vm.startDate,\n                          callback: function($$v) {\n                            _vm.startDate = $$v\n                          },\n                          expression: \"startDate\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    {\n                      ref: \"endDateForm\",\n                      attrs: {\n                        state: _vm.endDateState,\n                        \"label-cols-md\": \"2\",\n                        label: \"End: \",\n                        \"label-for\": \"endDate\",\n                        \"invalid-feedback\": \"End date is invalid\"\n                      }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"endDate\",\n                          state: _vm.endDateState,\n                          required: \"\",\n                          type: \"date\"\n                        },\n                        model: {\n                          value: _vm.endDate,\n                          callback: function($$v) {\n                            _vm.endDate = $$v\n                          },\n                          expression: \"endDate\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ]\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"filter\" },\n            [\n              _c(\n                \"center\",\n                [\n                  _c(\n                    \"b-button-group\",\n                    [\n                      _c(\n                        \"b-button\",\n                        {\n                          attrs: { variant: \"outline-primary\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.changeFilter(\"all\")\n                            }\n                          }\n                        },\n                        [_vm._v(\"All\")]\n                      ),\n                      _c(\n                        \"b-button\",\n                        {\n                          attrs: { variant: \"outline-secondary\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.changeFilter(\"completed\")\n                            }\n                          }\n                        },\n                        [_vm._v(\"Completed\")]\n                      ),\n                      _c(\n                        \"b-button\",\n                        {\n                          attrs: { variant: \"outline-success\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.changeFilter(\"uncompleted\")\n                            }\n                          }\n                        },\n                        [_vm._v(\"Uncompleted\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"col-md-8\", staticStyle: { \"padding-left\": \"3em\" } },\n        [\n          _vm.todo\n            ? _c(\n                \"div\",\n                [\n                  _c(\"p\", { staticStyle: { \"margin-top\": \"3em\" } }, [\n                    _c(\"b\", [_vm._v(\"Title:\")]),\n                    _vm._v(\n                      \"\\n          \" + _vm._s(this.todo.title) + \"\\n        \"\n                    )\n                  ]),\n                  _c(\"br\"),\n                  _c(\"p\", [\n                    _c(\"b\", [_vm._v(\"Body:\")]),\n                    _vm._v(\n                      \"\\n          \" + _vm._s(this.todo.body) + \"\\n        \"\n                    )\n                  ]),\n                  _c(\"br\"),\n                  _c(\"p\", [\n                    _c(\"b\", [_vm._v(\"Start:\")]),\n                    _vm._v(\n                      \"\\n          \" +\n                        _vm._s(_vm._f(\"formatDate\")(this.todo.startDate)) +\n                        \"\\n        \"\n                    )\n                  ]),\n                  _c(\"br\"),\n                  _c(\"p\", [\n                    _c(\"b\", [_vm._v(\"End:\")]),\n                    _vm._v(\n                      \"\\n          \" +\n                        _vm._s(_vm._f(\"formatDate\")(this.todo.endDate)) +\n                        \"\\n        \"\n                    )\n                  ]),\n                  this.todo.tick ? _c(\"br\") : _vm._e(),\n                  this.todo.tick\n                    ? _c(\"p\", [\n                        _c(\"b\", [_vm._v(\"Done:\")]),\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(_vm._f(\"formatDate\")(this.todo.doneDate)) +\n                            \"\\n        \"\n                        )\n                      ])\n                    : _vm._e(),\n                  _c(\"br\"),\n                  _c(\n                    \"b-button\",\n                    {\n                      directives: [\n                        {\n                          name: \"b-modal\",\n                          rawName: \"v-b-modal.modal\",\n                          modifiers: { modal: true }\n                        }\n                      ],\n                      attrs: {\n                        pill: \"\",\n                        variant: \"outline-primary\",\n                        pressed: _vm.update\n                      },\n                      on: {\n                        \"update:pressed\": function($event) {\n                          _vm.update = $event\n                        }\n                      }\n                    },\n                    [_vm._v(\"Update\")]\n                  )\n                ],\n                1\n              )\n            : _vm._e()\n        ]\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}