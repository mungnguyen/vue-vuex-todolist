{"remainingRequest":"/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/babel-loader/lib/index.js!/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/src/App.vue","mtime":1561650871645},{"path":"/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/mung_nguyen/20183/example/todolist/ToDoList/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import HelloWorld from './components/HelloWorld.vue';\nimport ToDoList from \"./components/ToDoList.vue\";\nimport moment from \"moment\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"app\",\n  components: {\n    ToDoList: ToDoList\n  },\n  data: function data() {\n    return {\n      filter: \"all\",\n      title: \"\",\n      titleState: null,\n      body: \"\",\n      bodyState: null,\n      startDate: \"\",\n      startDateState: \"\",\n      endDate: \"\",\n      endDateState: null,\n      update: false,\n      todo: null,\n      modalTitle: \"\"\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    list: function list(state) {\n      if (this.filter === \"all\") return state.todoModule.list;\n      if (this.filter === \"completed\") return state.todoModule.list.filter(function (item) {\n        return item.tick;\n      });\n      if (this.filter === \"uncompleted\") return state.todoModule.list.filter(function (item) {\n        return !item.tick;\n      });\n    }\n  })),\n  methods: {\n    checkFormValidity: function checkFormValidity() {\n      var validTitle = this.title.length > 0 ? true : false;\n      this.titleState = validTitle ? \"valid\" : \"invalid\";\n      var validBody = this.body.length > 0 ? true : false;\n      this.bodyState = validBody ? \"valid\" : \"invalid\";\n      var now = moment().format(\"MM-DD-YYYY\");\n      var validStart = this.startDate ? true : false;\n      this.startDateState = validStart ? \"valid\" : \"invalid\";\n      var validDate = !this.endDate || this.endDate < now || this.endDate < this.startDate ? false : true;\n      this.endDateState = validDate ? \"valid\" : \"invalid\";\n      return validTitle && validBody && validDate && validStart;\n    },\n    resetModal: function resetModal() {\n      if (!this.update) {\n        this.modalTitle = \"Add new to-do\";\n        this.title = \"\";\n        this.titleState = null;\n        this.body = \"\";\n        this.bodyState = null;\n        this.startDate = \"\", this.startDateState = null, this.endDate = \"\", this.endDateState = null;\n      } else {\n        this.modalTitle = \"Update to-do\";\n        this.title = this.todo.title;\n        this.titleState = null;\n        this.body = this.todo.body;\n        this.bodyState = null;\n        this.startDate = moment(this.todo.startDate), this.startDateState = null;\n        this.endDate = moment(this.todo.endDate);\n        this.endDateState = null;\n      }\n    },\n    reset: function reset() {\n      this.resetModal();\n      this.update = false;\n    },\n    setTodo: function setTodo(todo) {\n      this.todo = todo;\n    },\n    handleOk: function handleOk(bvModalEvt) {\n      // Prevent modal from closing\n      bvModalEvt.preventDefault(); // Trigger submit handler\n\n      this.handleSubmit();\n      this.update = false;\n    },\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n\n      // Exit when the form isn't valid\n      if (!this.checkFormValidity()) {\n        return;\n      } // Push the name to submitted names\n\n\n      var todoChange = {\n        title: this.title,\n        body: this.body,\n        startDate: moment(this.startDate).format(\"YYYY/MM/DD\"),\n        endDate: moment(this.endDate).format(\"YYYY/MM/DD\")\n      };\n\n      if (this.update) {\n        this.$store.commit(\"setId\", this.todo.id);\n        this.$store.commit(\"setTodo\", todoChange);\n        this.$store.dispatch(\"updateTodo\");\n        this.setTodo(todoChange);\n      } else {\n        this.$store.commit(\"setTodo\", todoChange);\n        this.$store.dispatch(\"addTodo\");\n      } // this.$refs.modal.hide();\n      // Hide the modal manually\n\n\n      this.$nextTick(function () {\n        _this.$refs.modal.hide();\n      });\n    },\n    deleteTodo: function deleteTodo(id) {\n      this.$store.commit(\"setId\", id);\n      this.$store.dispatch(\"deleteTodo\");\n    },\n    changeFilter: function changeFilter(filte) {\n      this.filter = filte;\n    }\n  },\n  mounted: function mounted() {\n    this.$store.dispatch(\"getAllTodo\");\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <link rel=\"stylesheet\" href=\"../node_modules/@fortawesome/fontawesome-free/css/all.css\">\n    <div class=\"header\">\n      <center>TO-DO LIST</center>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-4 to-do-list\">\n        <div>\n          <div\n            v-for=\"(item, index) in list\"\n            v-bind:item=\"item\"\n            v-bind:index=\"index\"\n            v-bind:key=\"item.id\"\n          >\n            <ToDoList style=\"cursor: pointer\" :todo=\"item\" v-if=\"!item.tick\"/>\n          </div>\n        </div>\n        <div>\n          <div\n            v-for=\"(item, index) in list\"\n            v-bind:item=\"item\"\n            v-bind:index=\"index\"\n            v-bind:key=\"item.id\"\n          >\n            <ToDoList style=\"cursor: pointer\" :todo=\"item\" v-if=\"item.tick\"/>\n          </div>\n        </div>\n        <center>\n          <b-button pill v-b-modal.modal variant=\"outline-primary\">Add new</b-button>\n        </center>\n        <b-modal\n          id=\"modal\"\n          ref=\"modal\"\n          :title=\"modalTitle\"\n          @show=\"resetModal\"\n          @hidden=\"reset\"\n          @ok=\"handleOk\"\n        >\n          <form @submit.stop.prevent=\"handleSubmit\">\n            <b-form-group\n              ref=\"titleForm\"\n              :state=\"titleState\"\n              label-cols-md=\"2\"\n              label=\"Tilte\"\n              label-for=\"title\"\n              invalid-feedback=\"Title is required\"\n            >\n              <b-form-input id=\"title\" v-model=\"title\" :state=\"titleState\" required></b-form-input>\n            </b-form-group>\n\n            <b-form-group\n              ref=\"bodyForm\"\n              :state=\"bodyState\"\n              label-cols-md=\"2\"\n              label=\"Body\"\n              label-for=\"body\"\n              invalid-feedback=\"Body is required\"\n            >\n              <b-form-input id=\"body\" v-model=\"body\" :state=\"bodyState\" required></b-form-input>\n            </b-form-group>\n\n            <b-form-group\n              ref=\"startDateForm\"\n              :state=\"startDateState\"\n              label-cols-md=\"2\"\n              label=\"Start: \"\n              label-for=\"startDate\"\n              invalid-feedback=\"Start date is invalid\"\n            >\n              <b-form-input\n                id=\"startDate\"\n                v-model=\"startDate\"\n                :value=\"startDate\"\n                :state=\"startDateState\"\n                required\n                type=\"date\"\n              ></b-form-input>\n            </b-form-group>\n            <b-form-group\n              ref=\"endDateForm\"\n              :state=\"endDateState\"\n              label-cols-md=\"2\"\n              label=\"End: \"\n              label-for=\"endDate\"\n              invalid-feedback=\"End date is invalid\"\n            >\n              <b-form-input\n                id=\"endDate\"\n                v-model=\"endDate\"\n                :state=\"endDateState\"\n                required\n                type=\"date\"\n              ></b-form-input>\n            </b-form-group>\n          </form>\n        </b-modal>\n        <div class=\"filter\">\n          <center>\n            <b-button-group>\n              <b-button @click=\"changeFilter('all')\" variant=\"outline-primary\">All</b-button>\n              <b-button @click=\"changeFilter('completed')\" variant=\"outline-secondary\">Completed</b-button>\n              <b-button @click=\"changeFilter('uncompleted')\" variant=\"outline-success\">Uncompleted</b-button>\n            </b-button-group>\n          </center>\n        </div>\n      </div>\n      <div class=\"col-md-8\" style=\"padding-left: 3em\">\n        <div v-if=\"todo\">\n          <p style=\"margin-top: 3em\">\n            <b>Title:</b>\n            {{ this.todo.title}}\n          </p>\n          <br>\n          <p>\n            <b>Body:</b>\n            {{ this.todo.body }}\n          </p>\n          <br>\n          <p>\n            <b>Start:</b>\n            {{ this.todo.startDate | formatDate }}\n          </p>\n          <br>\n          <p>\n            <b>End:</b>\n            {{ this.todo.endDate | formatDate }}\n          </p>\n          <br v-if=\"this.todo.tick\">\n          <p v-if=\"this.todo.tick\">\n            <b>Done:</b>\n            {{ this.todo.doneDate | formatDate }}\n          </p>\n          <br>\n          <b-button pill v-b-modal.modal variant=\"outline-primary\" :pressed.sync=\"update\">Update</b-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld.vue';\nimport ToDoList from \"./components/ToDoList.vue\";\nimport moment from \"moment\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  name: \"app\",\n\n  components: {\n    ToDoList\n  },\n\n  data: function() {\n    return {\n      filter: \"all\",\n      title: \"\",\n      titleState: null,\n      body: \"\",\n      bodyState: null,\n      startDate: \"\",\n      startDateState: \"\",\n      endDate: \"\",\n      endDateState: null,\n      update: false,\n      todo: null,\n      modalTitle: \"\"\n    };\n  },\n\n  computed: {\n    ...mapState({\n      list(state) {\n        if (this.filter === \"all\") return state.todoModule.list;\n        if (this.filter === \"completed\")\n          return state.todoModule.list.filter(item => item.tick);\n        if (this.filter === \"uncompleted\")\n          return state.todoModule.list.filter(item => !item.tick);\n      }\n    })\n  },\n\n  methods: {\n    checkFormValidity() {\n      const validTitle = this.title.length > 0 ? true : false;\n      this.titleState = validTitle ? \"valid\" : \"invalid\";\n\n      const validBody = this.body.length > 0 ? true : false;\n      this.bodyState = validBody ? \"valid\" : \"invalid\";\n\n      const now = moment().format(\"MM-DD-YYYY\");\n\n      const validStart = this.startDate ? true : false;\n      this.startDateState = validStart ? \"valid\" : \"invalid\";\n\n      const validDate =\n        !this.endDate || this.endDate < now || this.endDate < this.startDate\n          ? false\n          : true;\n      this.endDateState = validDate ? \"valid\" : \"invalid\";\n\n      return validTitle && validBody && validDate && validStart;\n    },\n\n    resetModal() {\n      if (!this.update) {\n        this.modalTitle = \"Add new to-do\";\n        this.title = \"\";\n        this.titleState = null;\n        this.body = \"\";\n        this.bodyState = null;\n        (this.startDate = \"\"),\n          (this.startDateState = null),\n          (this.endDate = \"\"),\n          (this.endDateState = null);\n      } else {\n        this.modalTitle = \"Update to-do\";\n        this.title = this.todo.title;\n        this.titleState = null;\n        this.body = this.todo.body;\n        this.bodyState = null;\n        (this.startDate = moment(this.todo.startDate)),\n          (this.startDateState = null);\n        this.endDate = moment(this.todo.endDate);\n        this.endDateState = null;\n      }\n    },\n\n    reset() {\n      this.resetModal();\n      this.update = false;\n    },\n\n    setTodo(todo) {\n      this.todo = todo;\n    },\n\n    handleOk(bvModalEvt) {\n      // Prevent modal from closing\n      bvModalEvt.preventDefault();\n      // Trigger submit handler\n      this.handleSubmit();\n      this.update = false;\n    },\n\n    handleSubmit() {\n      // Exit when the form isn't valid\n      if (!this.checkFormValidity()) {\n        return;\n      }\n      // Push the name to submitted names\n      const todoChange = {\n        title: this.title,\n        body: this.body,\n        startDate: moment(this.startDate).format(\"YYYY/MM/DD\"),\n        endDate: moment(this.endDate).format(\"YYYY/MM/DD\")\n      };\n      if (this.update) {\n        this.$store.commit(\"setId\", this.todo.id);\n        this.$store.commit(\"setTodo\", todoChange);\n        this.$store.dispatch(\"updateTodo\");\n        this.setTodo(todoChange);\n      } else {\n        this.$store.commit(\"setTodo\", todoChange);\n        this.$store.dispatch(\"addTodo\");\n      }\n\n      // this.$refs.modal.hide();\n      // Hide the modal manually\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n\n    deleteTodo(id) {\n      this.$store.commit(\"setId\", id);\n      this.$store.dispatch(\"deleteTodo\");\n    },\n\n    changeFilter(filte) {\n      this.filter = filte;\n    }\n  },\n\n  mounted() {\n    this.$store.dispatch(\"getAllTodo\");\n  }\n};\n</script>\n\n<style>\n.header {\n  padding: 0.5em;\n  font-size: 2em;\n  color: rgb(89, 125, 201);\n  background-color: rgb(233, 240, 247);\n  box-shadow: 1em;\n}\n\n.to-do-list {\n  border-right: 0.05em solid rgb(134, 131, 131);\n  margin: 0;\n  padding-top: 0.5em;\n  padding-right: 0;\n  height: 33.8em;\n}\n\n.todo span {\n  margin-left: 3em;\n  font: 1em sans-serif;\n}\n\n.delete {\n  position: absolute;\n  right: 1em;\n  color: grey;\n}\n\n.delete:hover {\n  color: black;\n}\n\n.filter {\n  position: absolute;\n  bottom: 1em;\n  left: 5em;\n}\n</style>\n"],"sourceRoot":"src"}]}